name: Main Workflow
on:
  push:
    branches:
      - main
jobs:
  dotnet-tasks:
    strategy:
      matrix:
        task:
          - command: restore
            projects: '**/*.csproj'
            feedsToUse: config
            nugetConfigPath: 'NuGet.config'
          - command: build
            projects: '**/*.csproj'
            arguments: '--configuration Release'
          - command: test
            projects: '**/*.csproj'
            arguments: '--collect "Code coverage"'
          - command: pack
            packagesToPack: '**/*.csproj'
            configuration: 'Release'
          - command: push
            packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
            nuGetFeedType: external
    uses: kirandevops1993/DOTNETCORECLI-REUSABLE/.github/workflows/dotnetreusable.yml@main
    with:
      command: ${{ matrix.task.command }}
      projects: ${{ matrix.task.projects || '' }}
      arguments: ${{ matrix.task.arguments || '' }}
      feedsToUse: ${{ matrix.task.feedsToUse || '' }}
      nugetConfigPath: ${{ matrix.task.nugetConfigPath || '' }}
      packagesToPack: ${{ matrix.task.packagesToPack || '' }}
      configuration: ${{ matrix.task.configuration || '' }}
      packagesToPush: ${{ matrix.task.packagesToPush || '' }}
      nuGetFeedType: ${{ matrix.task.nuGetFeedType || '' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK 9.0.201
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.201'

      - name: Run dotnet ${{ inputs.command }}
        run: |
          CMD="${{ inputs.command }}"
          
          if [ "$CMD" = "restore" ]; then
            dotnet restore "${{ inputs.projects }}" --configfile "${{ inputs.nugetConfigPath }}"

          elif [ "$CMD" = "build" ]; then
            dotnet build "${{ inputs.projects }}" ${{ inputs.arguments }}
          
          elif [ "$CMD" = "test" ]; then
            dotnet test "${{ inputs.projects }}" ${{ inputs.arguments }} --logger trx
          
          elif [ "$CMD" = "pack" ]; then
            dotnet pack ${{ inputs.packagesToPack }} --configuration ${{ inputs.configuration }} -o ./nupkgs
          
          elif [ "$CMD" = "push" ]; then
            dotnet nuget push "${{ inputs.packagesToPush }}" --source "https://api.nuget.org/v3/index.json"
          
          else
            echo "Unsupported command: $CMD"
            exit 1
          fi
